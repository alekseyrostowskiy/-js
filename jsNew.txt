REDUX TOOLKIT:	configureStore:
- часть проблем, которые могут возникать пр разработке больших приложений:
	1.во-первых слишком много повторений кода при создании redcuer-ов и actioncreator-ов--->хотелось бы всё это делать покороче+разбивать на отдельные куски, как мы это уже делали с reducer-ами	
	2.во-вторых хотелось немножко удобнее создавать store(особенно смущает конструкция по расширению middleware и расширению в браузере)
	3.в третьих, когда у нас с вами будут очень вложенные структуры, которые лежат внутри стора, то не очень приятно будет соблюдать иммутабельность и что-то менять внутри
--->на помощь приходит ReduxToolkit, рассмотрим функции, которые входят в эту библиотеку:
	*configureStore - автоматически комбинирует reducer, подключать дополнительный функционал(middlewares, enhancers, автоматически включать devtools без той громадной строки, которую мы использовали ранее) 
////
import {configureStore} from '@reduxjs/toolkit';

const store = configureStore({
	reducer: {heroes: heroes, filters: filters},
	middleware: [getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware)],	//в Toolkit-е пошли немного дальше--->мы говорили о том. что Thunk есть почти в каждом проекте, поэтому в Toolkit уже включены часть самых используемых middleware(на момент записи урока их было 3 -
	1. serializabilityMiddleware - проверяет, что в сторе у нас не должно быть данных, которые не должны быть там - это символы, промисы, функции и т.д.)
	2. immutabilityMiddleware - нужен для того, чтобы обнаруживать мутации, которые могут возникнуть в сторе 	
	3. ThunkMiddleware	
	--->включаются они по команде: getDefaultMiddleware() - возвращает массив уже встроенных middleware
	devTools: process.env.NODE_ENV !== 'production'(это конструкция, кот. автоматически вычисляет,нужно ли нам devtools включать или нет и это будет зависеть от того, какой нас build - production или development)
	middleware: [ReduxThunk, stringMiddleware],
	preloadedState: (опциональный параметр,задающий начальное состояние нашего хранилища),
	enhancers: (передаётся также массив)
}
- Redux Toolkit - это всего-лишь инструмент для того, чтобы код писать немного удобнее и лаконичнее. Он не вносит никакую новую логику

REDUX TOOLKIT:	createAction:
- 